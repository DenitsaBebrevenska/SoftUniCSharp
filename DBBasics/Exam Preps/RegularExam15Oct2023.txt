--01.DDL

CREATE TABLE Countries(
	     Id INT PRIMARY KEY IDENTITY,
	     [Name] NVARCHAR(50) NOT NULL
)

CREATE TABLE Destinations(
	     Id INT PRIMARY KEY IDENTITY,
	     [Name] VARCHAR(50) NOT NULL,
	     CountryId INT NOT NULL FOREIGN KEY REFERENCES Countries (Id)
)

CREATE TABLE Rooms(
	Id INT PRIMARY KEY IDENTITY,
	[Type] VARCHAR(40) NOT NULL,
	Price DECIMAL(18,2) NOT NULL,
	BedCount  INT NOT NULL,
	CONSTRAINT CHK_BedCount CHECK (BedCount > 0 AND BedCount <= 10)
)

CREATE TABLE Hotels(
	Id INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(50) NOT NULL,
	DestinationId INT NOT NULL FOREIGN KEY REFERENCES Destinations(Id)
)

CREATE TABLE Tourists(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(80) NOT NULL,
	PhoneNumber VARCHAR(20) NOT NULL,
	Email VARCHAR(80),
	CountryId INT NOT NULL FOREIGN KEY REFERENCES Countries(Id)
)

CREATE TABLE Bookings(
	Id INT PRIMARY KEY IDENTITY,
	ArrivalDate DATETIME2 NOT NULL,
	DepartureDate DATETIME2 NOT NULL,
	AdultsCount INT NOT NULL,
	CONSTRAINT CHK_AdultCount CHECK (AdultsCount > 0 AND AdultsCount <= 10),
	ChildrenCount INT NOT NULL,
	CONSTRAINT CHK_ChildrenCount CHECK (ChildrenCount >= 0 AND ChildrenCount <= 9),
	TouristId INT FOREIGN KEY REFERENCES Tourists(Id) NOT NULL,
	HotelId INT FOREIGN KEY REFERENCES Hotels(Id) NOT NULL,
	RoomId INT FOREIGN KEY REFERENCES Rooms(Id) NOT NULL
)

CREATE TABLE HotelsRooms(
	HotelId INT FOREIGN KEY REFERENCES Hotels(Id) NOT NULL,
	RoomId INT FOREIGN KEY REFERENCES Rooms(Id) NOT NULL,
	PRIMARY KEY(HotelId, RoomId)
)


--02.INSERT

INSERT INTO Tourists([Name], PhoneNumber, Email, CountryId)
	 VALUES ('John Rivers', '653-551-1555', 'john.rivers@example.com', 6),
			('Adeline Aglaé', '122-654-8726', 'adeline.aglae@example.com', 2),
			('Sergio Ramirez', '233-465-2876', 's.ramirez@example.com', 3),
			('Johan Müller', '322-876-9826', 'j.muller@example.com', 7),
			('Eden Smith', '551-874-2234', 'eden.smith@example.com', 6)

INSERT INTO Bookings(ArrivalDate, DepartureDate, AdultsCount, ChildrenCount, TouristId, HotelId, RoomId)
	 VALUES ('2024-03-01', '2024-03-11', 1, 0, 21, 3, 5),
			('2023-12-28', '2024-01-06', 2, 1, 22, 13, 3),
			('2023-11-15', '2023-11-20', 1, 2, 23, 19, 7),
			('2023-12-05', '2023-12-09', 4, 0, 24, 6, 4),
			('2024-05-01', '2024-05-07', 6, 0, 25, 14, 6)

--03.UPDATE

UPDATE Bookings
SET DepartureDate = DATEADD(day, 1, DepartureDate)
WHERE YEAR(DepartureDate) = 2023  AND MONTH(DepartureDate) = 12

UPDATE Tourists
SET Email = NULL
WHERE Email LIKE '%MA%'

--04.DELETE

DELETE FROM Bookings
WHERE TouristId IN (
	SELECT Id FROM Tourists
	WHERE [Name] LIKE '%Smith')

DELETE FROM Tourists
WHERE [Name] LIKE '%Smith'

--05.BookingsByPriceOfRoomAndArrivalDate

	SELECT FORMAT(b.ArrivalDate, 'yyyy-MM-dd') 
		AS ArrivalDate, b.AdultsCount, b.ChildrenCount 
      FROM Bookings AS b
INNER JOIN Rooms AS r
		ON r.Id = b.RoomId
  ORDER BY r.Price DESC, b.ArrivalDate


--06. HotelsByCountOfBookings

SELECT h.Id, h.[Name] FROM Hotels AS h
LEFT JOIN HotelsRooms AS hr
ON h.Id = hr.HotelId
LEFT JOIN Rooms AS r
ON hr.RoomId = r.Id
LEFT JOIN Bookings AS b
ON b.HotelId = h.Id
WHERE r.[Type] = 'VIP Apartment'
GROUP BY h.Id, h.[Name]
ORDER BY COUNT(h.Id) DESC


--07. TouristsWithoutBookings

SELECT t.Id, t.[Name], t.PhoneNumber FROM Tourists AS t
LEFT JOIN Bookings AS b
ON t.Id = b.TouristId
WHERE b.TouristId IS NULL
ORDER BY t.[Name]

--08. First10Bookings

SELECT TOP(10) h.[Name] AS HotelName, 
			   d.[Name] AS DestinationName, 
			   c.[Name] AS CountryName 
		  FROM Bookings AS b
	 LEFT JOIN Hotels AS h
			ON b.HotelId = h.Id
	 LEFT JOIN Destinations AS d
			ON d.Id = h.DestinationId
	 LEFT JOIN Countries AS c
			ON c.Id = d.CountryId
		 WHERE b.ArrivalDate < '2023-12-31' AND h.Id % 2 <> 0
	  ORDER BY CountryName, ArrivalDate

--09. TouristsBookedInHotels

SELECT h.[Name] AS HotelName, r.Price AS RoomPrice FROM Tourists AS t
INNER JOIN Bookings AS b
ON t.Id = b.TouristId
INNER JOIN Rooms AS r
ON r.Id = b.RoomId
INNER JOIN Hotels AS h
ON h.Id = b.HotelId
WHERE t.[Name] NOT LIKE '%EZ'
ORDER BY RoomPrice DESC


--10.Hotels Revenue

WITH SummaryTable AS(
SELECT h.[Name], DATEDIFF(day, b.ArrivalDate, b.DepartureDate) AS NightsCount, r.Price AS RoomPrice FROM Bookings AS b
INNER JOIN Rooms AS r
ON b.RoomId = r.Id
INNER JOIN Hotels AS h
ON h.Id = b.HotelId)
SELECT [Name], SUM(NightsCount * RoomPrice) AS HotelRevenue
FROM SummaryTable
GROUP BY [Name]
ORDER BY HotelRevenue DESC

--11. RoomsWithTourists

CREATE FUNCTION udf_RoomsWithTourists(@name VARCHAR(30)) 
RETURNS INT
AS
BEGIN

DECLARE @touristCount INT;

WITH SummedTable AS(
SELECT SUM(AdultsCount) AS CountAdults, SUM(ChildrenCount) AS CountChildren FROM Bookings AS b
INNER JOIN Rooms AS r
ON b.RoomId = r.Id
WHERE r.[Type] = @name)
SELECT @touristCount = CountAdults + CountChildren
FROM SummedTable

RETURN @touristCount
END;

--12. SearchForTouristsFromASpecificCountry

CREATE PROC usp_SearchByCountry(@country VARCHAR(60)) 
AS BEGIN 

SELECT t.[Name], t.PhoneNumber, t.Email, COUNT(b.Id) AS CountOfBookings FROM Tourists AS t
INNER JOIN Bookings AS b
ON t.Id = b.TouristId
INNER JOIN Countries AS c
ON t.CountryId = c.Id
WHERE c.[Name] = @country
GROUP BY t.[Name], t.Id, t.Email, t.PhoneNumber
ORDER BY t.[Name], CountOfBookings DESC

END;