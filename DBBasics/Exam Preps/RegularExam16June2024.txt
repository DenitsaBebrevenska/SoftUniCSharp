CREATE DATABASE LibraryDb

-- 01. DDL

CREATE TABLE Genres(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(30) NOT NULL
)

CREATE TABLE Contacts(
	Id INT PRIMARY KEY IDENTITY,
	Email NVARCHAR(100),
	PhoneNumber NVARCHAR(20),
	PostAddress NVARCHAR(200),
	Website NVARCHAR(50),
)

CREATE TABLE Authors(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(100) NOT NULL,
	ContactId INT NOT NULL FOREIGN KEY REFERENCES Contacts(Id)
)

CREATE TABLE Libraries(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(50) NOT NULL,
	ContactId INT NOT NULL FOREIGN KEY REFERENCES Contacts(Id)
)

CREATE TABLE Books(
	Id INT PRIMARY KEY IDENTITY,
	Title NVARCHAR(100) NOT NULL,
	YearPublished INT NOT NULL,
	ISBN NVARCHAR(13) NOT NULL UNIQUE,
	AuthorId INT NOT NULL FOREIGN KEY REFERENCES Authors(Id),
	GenreId INT NOT NULL FOREIGN KEY REFERENCES Genres(Id)
)

CREATE TABLE LibrariesBooks(
	LibraryId INT NOT NULL FOREIGN KEY REFERENCES Libraries(Id),
	BookId INT NOT NULL FOREIGN KEY REFERENCES Books(Id),
	PRIMARY KEY (LibraryId, BookId)
)

-- 02. Insert

INSERT INTO Contacts(Email, PhoneNumber, PostAddress, Website)
	 VALUES (NULL, NULL, NULL, NULL),
			(NULL, NULL, NULL, NULL),
			('stephen.king@example.com', '+4445556666', '15 Fiction Ave, Bangor, ME', 'www.stephenking.com'),
			('suzanne.collins@example.com', '+7778889999', '10 Mockingbird Ln, NY, NY', 'www.suzannecollins.com')

INSERT INTO Authors([Name], ContactId)
	 VALUES ('George Orwell', 21),
			('Aldous Huxley', 22),
			('Stephen King', 23),
			('Suzanne Collins', 24)

INSERT INTO Books(Title, YearPublished, ISBN, AuthorId, GenreId)
	 VALUES ('1984', 1949, '9780451524935', 16, 2),
			('Animal Farm', 1945, '9780451526342', 16, 2),
			('Brave New World', 1932, '9780060850524', 17, 2),
			('The Doors of Perception', 1954, '9780060850531', 17, 2),
			('The Shining', 1977, '9780307743657', 18, 9),
			('It', 1986, '9781501142970', 18, 9),
			('The Hunger Games', 2008, '9780439023481', 19, 7),
			('Catching Fire', 2009, '9780439023498', 19, 7),
			('Mockingjay', 2010, '9780439023511', 19, 7)

INSERT INTO LibrariesBooks(LibraryId, BookId)
	 VALUES (1, 36),
			(1, 37),
			(2, 38),
			(2, 39),
			(3, 40),
			(3, 41),
			(4, 42),
			(4, 43),
			(5, 44)


-- 03. Update

UPDATE Contacts
   SET Website = CONCAT_WS('','www.', LOWER(REPLACE(a.[Name], ' ', '')), '.com')
  FROM Contacts AS c
  JOIN Authors AS a
	ON c.Id = a.ContactId
 WHERE Website IS NULL


-- 04. Delete

DELETE FROM LibrariesBooks 
	  WHERE BookId IN (SELECT Id FROM Books 
						WHERE AuthorId IN (SELECT Id FROM Authors 
											WHERE [Name] = 'Alex Michaelides'))

DELETE FROM Books
WHERE AuthorId IN (SELECT Id FROM Authors 
				   WHERE [Name] = 'Alex Michaelides')

DELETE FROM Authors
	  WHERE [Name] = 'Alex Michaelides'

-- 05. Chronological Order

  SELECT Title AS BookTitle, 
	     ISBN, 
	     YearPublished AS YearReleased 
    FROM Books
ORDER BY YearPublished DESC, 
		 Title

-- 06. Books by Genre

  SELECT b.Id,
		 b.Title, 
		 b.ISBN,
		 g.[Name]
	FROM Books AS b
	JOIN Genres AS g
      ON b.GenreId = g.Id
   WHERE g.[Name] IN ('Biography', 'Historical Fiction')
ORDER BY g.[Name],
		 b.Title

-- 07. Missing Genre 
  SELECT l.[Name] AS [Library],
		 c.Email FROM Libraries AS l
	JOIN Contacts AS c
	  ON c.Id = l.ContactId
   WHERE NOT EXISTS(
		 SELECT 1
		 FROM LibrariesBooks AS lb
		 JOIN Books AS b
		 ON lb.BookId = b.Id
		 JOIN Genres AS g
		 ON g.Id = b.GenreId AND g.[Name] = 'Mystery'
		 WHERE lb.LibraryId = l.Id
	)
ORDER BY l.[Name]


-- 08. First 3 Books

SELECT TOP (3) b.Title,
		   b.YearPublished AS [Year],
		   g.[Name] AS Genre 
	  FROM Books AS b
	  JOIN Genres AS g
		ON b.GenreId = g.Id
     WHERE (b.YearPublished > 2000 AND b.Title LIKE '%a%')
		   OR (b.YearPublished < 1950 AND g.[Name] LIKE '%Fantasy%')
  ORDER BY b.Title, 
		   b.YearPublished DESC

-- 09. Authors from UK

  SELECT a.[Name] AS Author, 
	     c.Email,
		 c.PostAddress AS [Address] 
    FROM Authors AS a
	JOIN Contacts AS c
	  ON a.ContactId = c.Id
   WHERE c.PostAddress LIKE '%UK%'
ORDER BY a.[Name]

-- 10. Fictions in Denver

  SELECT a.[Name] AS Author, 
		 b.Title, l.[Name] AS [Library], 
		 c.PostAddress AS [Library Address] 
	FROM Books AS b
	JOIN Authors AS a
	  ON a.Id = b.AuthorId
	JOIN Genres AS g
	  ON b.GenreId = g.Id
	JOIN LibrariesBooks AS lb
	  ON lb.BookId = b.Id
	JOIN Libraries AS l
	  ON l.Id = lb.LibraryId
	JOIN Contacts AS c
	  ON c.Id = l.ContactId
   WHERE g.[Name] = 'Fiction' AND c.PostAddress LIKE '%Denver%'
ORDER BY b.Title

-- 11. Authors with Books

CREATE FUNCTION udf_AuthorsWithBooks(@name NVARCHAR(100))
	RETURNS INT 
	         AS
		  BEGIN

		DECLARE @bookCount INT;

		 SELECT @bookCount = COUNT(*)
		   FROM LibrariesBooks AS lb
		   JOIN Books AS b
			 ON lb.BookId = b.Id
		   JOIN Authors AS a
			 ON b.AuthorId = a.Id
		   WHERE A.[Name] = @name

		  RETURN @bookCount
		     END;
	
-- 12. Search by Genre

CREATE PROCEDURE usp_SearchByGenre(@genreName NVARCHAR(30))
			  AS
		   BEGIN

		  SELECT b.Title,
				 b.YearPublished AS [Year],
				 b.ISBN, 
				 a.[Name] AS Author,
				 g.[Name] AS Genre
			FROM Books AS b
			JOIN Genres AS g
			  ON b.GenreId = g.Id
			JOIN Authors AS a
			  ON a.Id = b.AuthorId
		   WHERE g.[Name] = @genreName
	    ORDER BY b.Title

			 END;