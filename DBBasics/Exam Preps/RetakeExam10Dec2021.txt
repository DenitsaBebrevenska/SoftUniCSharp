CREATE DATABASE Airport


-- 01. DDL

CREATE TABLE Passengers(
	Id INT PRIMARY KEY IDENTITY,
	FullName VARCHAR(100) UNIQUE NOT NULL,
	Email VARCHAR(50)UNIQUE NOT NULL
)

CREATE TABLE Pilots(
	Id INT PRIMARY KEY IDENTITY,
	FirstName VARCHAR(30) UNIQUE NOT NULL,
	LastName VARCHAR(30) UNIQUE NOT NULL,
	Age TINYINT NOT NULL,
	CONSTRAINT CHK_Age CHECK (Age >= 21 AND Age <= 62),
	Rating FLOAT,
	CONSTRAINT CHK_Rating CHECK (Rating >= 0 AND Rating <= 10)
)

CREATE TABLE AircraftTypes(
	Id INT PRIMARY KEY IDENTITY,
	TypeName VARCHAR(30) NOT NULL UNIQUE
)

CREATE TABLE Aircraft(
	Id INT PRIMARY KEY IDENTITY,
	Manufacturer VARCHAR(25) NOT NULL,
	Model VARCHAR(30) NOT NULL,
	[Year] INT NOT NULL,
	FlightHours INT,
	Condition CHAR NOT NULL,
	TypeId INT NOT NULL FOREIGN KEY REFERENCES AircraftTypes(Id)
)

CREATE TABLE PilotsAircraft(
	AircraftId INT NOT NULL FOREIGN KEY REFERENCES Aircraft(Id),
	PilotId INT NOT NULL FOREIGN KEY REFERENCES Pilots(Id),
	PRIMARY KEY (AircraftId, PilotId)
)

CREATE TABLE Airports(
	Id INT PRIMARY KEY IDENTITY,
	AirportName VARCHAR(70) NOT NULL UNIQUE,
	Country VARCHAR(100) NOT NULL UNIQUE
)

CREATE TABLE FlightDestinations(
	Id INT PRIMARY KEY IDENTITY,
	AirportId INT NOT NULL FOREIGN KEY REFERENCES Airports(Id),
	[Start] DATETIME NOT NULL,
	AircraftId INT NOT NULL FOREIGN KEY REFERENCES Aircraft(Id),
	PassengerId INT NOT NULL FOREIGN KEY REFERENCES Passengers(Id),
	TicketPrice DECIMAL(18,2) NOT NULL DEFAULT 15
)


-- 02. Insert

INSERT INTO Passengers (FullName, Email)
	 SELECT CONCAT_WS(' ', FirstName, LastName), 
			FirstName + LastName + '@gmail.com'
	   FROM Pilots
	  WHERE Id BETWEEN 5 AND 15

-- 03. Update

UPDATE Aircraft
   SET Condition = 'A'
 WHERE Condition IN ('C', 'B') 
	   AND (FlightHours IS NULL OR FlightHours <= 100) 
	   AND [Year] >= 2013

-- 04. Delete

DELETE FROM FlightDestinations
	  WHERE PassengerId IN 
			 (SELECT Id 
			    FROM Passengers 
			   WHERE LEN(FullName) = 10)

DELETE FROM Passengers
	  WHERE LEN(FullName) <= 10


-- 05. Aircraft

  SELECT Manufacturer, 
		 Model, 
		 FlightHours, 
		 Condition
	FROM Aircraft
ORDER BY FlightHours DESC

-- 06. Pilots and Aircraft

  SELECT p.FirstName, 
		 p.LastName,
		 a.Manufacturer,
		 a.Model,
		 a.FlightHours
	FROM Pilots AS p
	JOIN PilotsAircraft AS pa
	  ON p.Id = pa.PilotId
	JOIN Aircraft AS a
	  ON a.Id = pa.AircraftId
   WHERE FlightHours IS NOT NULL 
		 AND FlightHours <= 304
ORDER BY FlightHours DESC,
		 p.FirstName

-- 07. Top 20 Flight Destinations

  SELECT 
 TOP(20) fd.Id AS DestinationId, 
	     fd.[Start], 
		 p.FullName, 
		 a.AirportName,
		 fd.TicketPrice 
	FROM FlightDestinations AS fd
	JOIN Airports AS a
	  ON fd.AirportId = a.Id
	JOIN Passengers AS p
	  ON p.Id = fd.PassengerId
   WHERE DAY(fd.[Start]) % 2 = 0
ORDER BY fd.TicketPrice DESC,
		 a.AirportName

-- 08. Number of Flights for Each Aircraft

  SELECT a.Id AS AircraftId,
		 a.Manufacturer, 
		 a.FlightHours, 
		 COUNT(a.Id) AS FlightDestinationsCount, 
		 ROUND(AVG(fd.TicketPrice), 2) AS AvgPrice 
	FROM Aircraft AS a
	JOIN FlightDestinations AS fd 
	  ON fd.AircraftId = a.Id
GROUP BY a.Id, a.Manufacturer, 
		 a.FlightHours
  HAVING COUNT(a.Id) >= 2
ORDER BY FlightDestinationsCount DESC, 
		 AircraftId


-- 09. Regular Passengers

  SELECT p.FullName, 
		 COUNT(fd.AircraftId) AS CountOfAircrafts, 
		 SUM(fd.TicketPrice) AS TotalPayed
	FROM Passengers AS p
	JOIN FlightDestinations AS fd
	  ON p.Id = fd.PassengerId
	JOIN Aircraft AS a
	  ON a.Id = fd.AircraftId
GROUP BY p.FullName
  HAVING COUNT(fd.AircraftId) > 1 
		 AND p.FullName LIKE '_a%'
ORDER BY p.FullName


-- 10. Full Info for Flight Destinations

  SELECT a.AirportName, 
		 fd.[Start] AS DayTime, 
		 fd.TicketPrice, p.FullName, 
		 ai.Manufacturer, 
		 ai.Model 
	FROM FlightDestinations AS fd
	JOIN Airports AS a
	  ON fd.AirportId = a.Id
	JOIN Passengers AS p
	  ON p.Id = fd.PassengerId
	JOIN Aircraft AS ai
	  ON ai.Id = fd.AircraftId
   WHERE DATEPART(HOUR, fd.[Start]) BETWEEN 6 AND 20
		 AND fd.TicketPrice > 2500
ORDER BY ai.Model

-- 11. Find all Destinations by Email Address

CREATE FUNCTION udf_FlightDestinationsByEmail(@email VARCHAR(50))
RETURNS INT
BEGIN

DECLARE @destinationCount INT;

SELECT @destinationCount = COUNT(*) FROM Passengers AS p
JOIN FlightDestinations AS fd
ON p.Id = fd.PassengerId
WHERE p.Email = @email

CREATE FUNCTION udf_FlightDestinationsByEmail(@email VARCHAR(50))
    RETURNS INT
			 AS
		  BEGIN

		DECLARE @destinationCount INT;

		 SELECT @destinationCount = COUNT(*) FROM Passengers AS p
		   JOIN FlightDestinations AS fd
			 ON p.Id = fd.PassengerId
		  WHERE p.Email = @email

		 RETURN @destinationCount
	        END;

-- 12. Full Info for Airports

CREATE PROCEDURE usp_SearchByAirportName(@airportName VARCHAR(70))
			  AS
		   BEGIN
		  SELECT 
				 ap.AirportName, 
				 p.FullName,  
	       CASE
				WHEN fd.TicketPrice <= 400 THEN 'Low'
				WHEN fd.TicketPrice >= 401 AND fd.TicketPrice <= 1500 THEN 'Medium'
				WHEN fd.TicketPrice >= 1501	THEN 'High'
		 END AS LevelOfTickerPrice,
				ac.Manufacturer,
				ac.Condition,
				ait.TypeName
		   FROM Airports AS ap
		   JOIN FlightDestinations AS fd
		     ON ap.Id = fd.AirportId
		   JOIN Passengers AS p
		     ON p.Id = fd.PassengerId
		   JOIN Aircraft AS ac
			 ON ac.Id = fd.AircraftId
		   JOIN AircraftTypes AS ait
			 ON ait.Id = ac.TypeId
		  WHERE ap.AirportName = @airportName
	   ORDER BY ac.Manufacturer, p.FullName

		   END;