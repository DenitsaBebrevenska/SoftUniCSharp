--Databases Introduction--

04. Insert Records in Both Tables

INSERT INTO [Towns]([Id], [Name])
	VALUES
	(1, 'Sofia'),
	(2, 'Plovdiv'),
	(3, 'Varna')

INSERT INTO [Minions]([Id], [Name], [Age], [TownId])
	VALUES
	(1, 'Kevin', 22, 1),
	(2, 'Bob', 15, 3),
	(3, 'Steward', NULL, 2)

07. Create Table People

CREATE TABLE [People](
	[Id] INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(200) NOT NULL,
	[Picture] VARBINARY(MAX),
	CHECK (DATALENGTH ([Picture]) <= 2000000),
	[Height] DECIMAL(3,2),
	[Weight] DECIMAL(5,2),
	[Gender] CHAR(1) NOT NULL,
	CHECK ([Gender] = 'm' OR [Gender]= 'f'),
	[Birthdate] DATE NOT NULL,
	[Biography] NVARCHAR(MAX)
	)

INSERT INTO [People]([Name],[Height], [Weight], [Gender],
[Birthdate], [Biography])
	VALUES
	('Bella', 1.60, 62.2, 'f', '1968-01-06', NULL),
	('Tom', NULL, NULL, 'm', '1997-05-25', NULL),
	('Zack', 1.95, 85, 'm', '1992-03-03', 'Grew up in Santa Monica. Med student grad'),
	('Selena', 1.75, 70, 'f', '1985-06-08', NULL),
	('Philip', 1.65, 55, 'm', '1988-09-12', 'Took the hobbits to Isengard')

08. Create Table Users

CREATE TABLE [Users](
	[Id] INT PRIMARY KEY IDENTITY,
	[Username] VARCHAR(30) NOT NULL UNIQUE,
	[Password] VARCHAR(26) NOT NULL,
	[ProfilePicture] VARBINARY(MAX),
	CHECK (DATALENGTH([ProfilePicture]) <= 921600),
	[LastLoginTime] TIME,
	[IsDeleted] VARCHAR(5) NOT NULL,
	CHECK ([IsDeleted] = 'true' OR [IsDeleted] = 'false')
	)
INSERT INTO [Users]([Username], [Password], [IsDeleted])
	VALUES
	('PetKo', '!@34', 'false'),
	('Kuuki', 'qwerty', 'false'),
	('Zackariah', 'Password', 'true'),
	('DeathStar', 'LukeIAmYourFather', 'false'),
	('BigBewbs', 'NotSoBIG', 'true')

09-12 Exercise basic

ALTER TABLE [Users]
DROP CONSTRAINT PK_Users_Id

SELECT * FROM [Users]

UPDATE [Users]
	SET [Password] = '!@32455'
	WHERE [Username] = 'PetKo'

ALTER TABLE [Users]
	ADD CONSTRAINT PK_Combined_IdUsername
	PRIMARY KEY ([Id],[Username])

ALTER TABLE [Users]
	ADD CONSTRAINT CHK_PasswordLength CHECK (DATALENGTH([Password]) >= 5)
	
ALTER TABLE [Users]
	ADD CONSTRAINT DF_LastLogInTime
	DEFAULT GETDATE() FOR [LastLoginTime]

INSERT INTO [Users]([Username], [Password],[IsDeleted])
	VALUES
	        ('Adam','AdamIsHot','true')

ALTER TABLE [Users]
	DROP CONSTRAINT PK_Combined_IdUsername

ALTER TABLE [Users]
	ADD CONSTRAINT PK_IdUser
	PRIMARY KEY ([Id])

ALTER TABLE [Users]
	ADD CONSTRAINT CHK_Username
	CHECK (DATALENGTH([Username]) >= 3)


13. Movies Database

CREATE TABLE [Directors](
	[Id] INT IDENTITY,
	[Name] VARCHAR(250) NOT NULL,
	[Notes] VARCHAR(MAX),
	CONSTRAINT PK_DirectorId PRIMARY KEY ([Id])
)

CREATE TABLE [Genres](
	[Id] INT IDENTITY,
	[Name] VARCHAR(50) NOT NULL,
	[Notes] VARCHAR(MAX),
	CONSTRAINT PK_GenreId PRIMARY KEY ([Id])
)

CREATE TABLE [Categories](
	[Id] INT IDENTITY,
	[Name] VARCHAR(150) NOT NULL,
	[Notes] VARCHAR(MAX),
	CONSTRAINT PK_CategoryId PRIMARY KEY ([Id])
)

CREATE TABLE [Movies](
	[Id] INT IDENTITY,
	[Title] VARCHAR(250) NOT NULL,
	[DirectorId] INT NOT NULL,
	[CopyrightYear] INT,
	[Length] INT,
	[GenreId] INT NOT NULL,
	[CategoryId] INT NOT NULL,
	[Rating] DECIMAL (3,1),
	[Notes] VARCHAR(MAX)
	CONSTRAINT PK_MovieId PRIMARY KEY ([Id]),
	CONSTRAINT FK_DirectorId FOREIGN KEY ([DirectorId]) 
		REFERENCES [Directors]([Id]),
	CONSTRAINT FK_GenreId FOREIGN KEY ([GenreId])
		REFERENCES [Genres]([Id]),
	CONSTRAINT FK_CategoryId FOREIGN KEY ([CategoryId])
		REFERENCES [Categories]([Id])
)

INSERT INTO [Directors]([Name])
	VALUES ('Steven Spielberg'),
		   ('Tim Burton'),
		   ('Martin Scorsese'),
		   ('George Lucas'),
		   ('Alfred Hitchcock')

INSERT INTO [Genres]([Name])
	VALUES ('Drama'),
		   ('Horror'),
		   ('Comedy'),
		   ('Fantasy'),
		   ('Romantic')

INSERT INTO [Categories]([Name])
	VALUES ('G'),
		   ('PG'),
		   ('PG-13'),
		   ('R'),
		   ('NC-17')

INSERT INTO [Movies]([Title], [DirectorId], [GenreId], [CategoryId])
	VALUES ('Schindler`s List', 1, 1, 3),
		   ('Edward Scissorshands', 2, 5, 3),
		   ('The wolf on Wallstreet', 3, 3, 3),
		   ('Star Wars: Episode IV â€“ A New Hope', 4, 4, 4),
		   ('Psycho', 5, 2, 5)


14. Car Rental Database

CREATE TABLE [Categories](
	[Id] INT IDENTITY,
	[Name] VARCHAR(100) NOT NULL,
	[DailyRate] DECIMAL (5,2),
	[WeeklyRate] DECIMAL (5,2),
	[MonthlyRate] DECIMAL (5,2),
	[WeekendRate] DECIMAL (5,2)
	CONSTRAINT PK_CategoryId PRIMARY KEY ([Id])
)

INSERT INTO [Categories]([Name])
	VALUES	('Sport'),
			('SUV'),
			('Truck')

CREATE TABLE [Cars](
	[Id] INT IDENTITY,
	[PlateNumber] VARCHAR(10) NOT NULL,
	[Manufacturer] VARCHAR(50),
	[Model] VARCHAR(50),
	[Year] VARCHAR(4),
	[CategoryId] INT NOT NULL,
	[Doors] TINYINT,
	[Picture] VARBINARY(MAX),
	[Condition] VARCHAR(50),
	[Available] BIT
	CONSTRAINT PK_CarId PRIMARY KEY ([Id])
	CONSTRAINT FK_CategoryId FOREIGN KEY ([CategoryId]) 
		REFERENCES [Categories]([Id])
)

INSERT INTO [Cars]([PlateNumber], [CategoryId])
	VALUES	('CB2202PK', 3),
			('PK0202AA', 2),
			('EA1700CA', 1)


CREATE TABLE [Employees](
	[Id] INT IDENTITY,
	[FirstName] VARCHAR(50) NOT NULL,
	[LastName] VARCHAR(50) NOT NULL,
	[Title] VARCHAR(5),
	[Notes] VARCHAR(MAX)
	CONSTRAINT PK_EmployeeId PRIMARY KEY ([Id])
)

INSERT INTO [Employees]([FirstName], [LastName])
	VALUES	('Peter', 'Stevenson'),
			('Helena', 'Carter'),
			('Jim', 'Patterson')

CREATE TABLE [Customers](
	[Id] INT IDENTITY,
	[DriverLicenceNumber] VARCHAR(20) NOT NULL,
	[FullName] VARCHAR(100) NOT NULL,
	[Address] VARCHAR(200),
	[City] VARCHAR(50),
	[ZIPCode] VARCHAR(10),
	[Notes] VARCHAR(MAX)
	CONSTRAINT PK_CustomerId PRIMARY KEY ([Id])
)


INSERT INTO [Customers]([DriverLicenceNumber], [FullName])
	VALUES	('02221003325', 'Darren Hilton'),
			('00247866332', 'Zack Milton'),
			('00447894662', 'Libia Zillon')

CREATE TABLE [RentalOrders](
	[Id] INT IDENTITY,
	[EmployeeId] INT NOT NULL,
	[CustomerId] INT NOT NULL,
	[CarId] INT NOT NULL,
	[TankLevel] VARCHAR(10),
	[KilometrageStart] VARCHAR(10),
	[KilometrageEnd] VARCHAR(10),
	[TotalKilometrage] VARCHAR(10),
	[StartDate] DATETIME NOT NULL,
	[EndDate] DATETIME NOT NULL,
	[TotalDays] TINYINT NOT NULL,
	[RateApplied] DECIMAL (5, 2) NOT NULL,
	[TaxRate] DECIMAL (5,2) NOT NULL,
	[OrderStatus] VARCHAR(50),
	[Notes] VARCHAR(MAX)
	CONSTRAINT PK_OrderId PRIMARY KEY ([Id]),
	CONSTRAINT FK_EmployeeId FOREIGN KEY ([EmployeeId])
		REFERENCES [Employees]([Id]),
	CONSTRAINT FK_CustomerId FOREIGN KEY ([CustomerId])
		REFERENCES [Customers]([Id]),
	CONSTRAINT FK_CarId FOREIGN KEY ([CarId])
		REFERENCES [Cars]([Id])
)

INSERT INTO [RentalOrders]([EmployeeId],[CustomerId],[CarId], [StartDate],
			[EndDate], [TotalDays], [RateApplied], [TaxRate])
	   VALUES
			(1, 2, 3, '2024-03-03', '2024-03-04', 1, 20.2, 1.05),
			(2, 1, 3, '2024-03-03', '2024-03-06', 4, 10.2, 1.05),
			(3, 1, 1, '2024-03-03', '2024-03-08', 6, 19.2, 1.05)



15. Hotel Database

CREATE TABLE Employees(
	Id INT IDENTITY,
	FirstName VARCHAR(50) NOT NULL,
	LastName VARCHAR(50) NOT NULL,
	Title VARCHAR(4),
	Notes VARCHAR(MAX)
	CONSTRAINT PK_EmployeeId PRIMARY KEY (Id)
)

INSERT INTO Employees (FirstName, LastName)
	VALUES ('Zack','Stevenson'),
		   ('Marc','Cubert'),
		   ('Elaine','Jameson')

CREATE TABLE Customers(
	AccountNumber VARCHAR(100),
	FirstName VARCHAR(50) NOT NULL,
	LastName VARCHAR(50) NOT NULL,
	PhoneNumber VARCHAR(20) NOT NULL,
	EmergencyName VARCHAR(200),
	EmergencyNumber VARCHAR(20),
	Notes VARCHAR(MAX)
	CONSTRAINT PK_CustomerAccountNumber PRIMARY KEY (AccountNumber)
)

INSERT INTO Customers (AccountNumber, FirstName, LastName, PhoneNumber)
	VALUES ('AG024412','Bard','Rubenson','+85224664'),
		   ('FR021148','Zita','Patries','+53669544123'),
		   ('BG002114','Elena','Milkova','+35988664911')

CREATE TABLE RoomStatus(
	[Status] VARCHAR(50),
	Notes VARCHAR(MAX)
	CONSTRAINT PK_RoomStatus PRIMARY KEY ([Status])
)

INSERT INTO RoomStatus ([Status])
	VALUES ('Free'),
		   ('Occupied'),
		   ('Ongoing renovation')

CREATE TABLE RoomTypes(
	[Type] VARCHAR(50),
	Notes VARCHAR(MAX)
	CONSTRAINT PK_RoomType PRIMARY KEY ([Type])
)

INSERT INTO RoomTypes ([Type])
	VALUES ('Single'),
		   ('Family'),
		   ('Appartament')

CREATE TABLE BedTypes(
	[Type] VARCHAR(50),
	Notes VARCHAR(MAX)
	CONSTRAINT PK_BedType PRIMARY KEY ([Type])
)

INSERT INTO BedTypes ([Type])
	VALUES ('Single'),
		   ('2Persons'),
		   ('Sofa')

CREATE TABLE Rooms(
	Number VARCHAR(3),
	RoomType VARCHAR(50) NOT NULL,
	BedType VARCHAR(50) NOT NULL,
	Rate DECIMAL (5,2) NOT NULL,
	RoomStatus VARCHAR(50) NOT NULL,
	Notes VARCHAR(MAX)
	CONSTRAINT PK_RoomNumber PRIMARY KEY (Number),
	CONSTRAINT FK_RoomType FOREIGN KEY (RoomType)
		REFERENCES RoomTypes ([Type]),
	CONSTRAINT FK_BedType FOREIGN KEY (BedType)
		REFERENCES BedTypes ([Type]),
	CONSTRAINT FK_RoomStatus FOREIGN KEY (RoomStatus)
		REFERENCES RoomStatus ([Status])
)

INSERT INTO Rooms (Number, RoomType, BedType, Rate, RoomStatus)
	VALUES ('302', 'Single', 'Single', 20.5, 'Occupied'),
		   ('101', 'Family', '2Persons', 0.0, 'Free'),
		   ('202', 'Appartament', 'Sofa', 100.5, 'Ongoing renovation')

CREATE TABLE Payments(
	Id INT IDENTITY,
	EmployeeId INT NOT NULL,
	PaymentDate DATETIME,
	AccountNumber VARCHAR(100),
	FirstDateOccupied DATETIME NOT NULL,
	LastDateOccupied DATETIME NOT NULL, 
	TotalDays INT NOT NULL,
	AmountCharged DECIMAL (7,2) NOT NULL ,
	TaxRate DECIMAL (5,2) NOT NULL,
	TaxAmount DECIMAL (5,2) NOT NULL,
	PaymentTotal DECIMAL (8,2) NOT NULL,
	Notes VARCHAR(MAX)
	CONSTRAINT PK_PaymentId PRIMARY KEY (Id),
	CONSTRAINT FK_EmployeeId FOREIGN KEY (EmployeeId)
		REFERENCES Employees (Id)
)

INSERT INTO Payments (EmployeeId, FirstDateOccupied, LastDateOccupied,
			TotalDays, AmountCharged, TaxRate, TaxAmount, PaymentTotal)
	VALUES (1, '2023-12-10', '2023-12-12', 2, 200.6, 2.3, 10, 1500.3),
		   (2, '2023-12-10', '2023-12-13', 3, 300.6, 2.3, 30, 1600.3),
		   (3, '2023-12-10', '2023-12-14', 4, 400.6, 2.3, 40, 1700.3)

CREATE TABLE Occupancies(
	Id INT IDENTITY,
	EmployeeId INT FOREIGN KEY REFERENCES Employees(Id) NOT NULL,
	DateOccupied DATETIME NOT NULL,
	AccountNumber VARCHAR(100) NOT NULL,
	RoomNumber VARCHAR(3) NOT NULL,
	RateApplied DECIMAL (5,2) NOT NULL,
	PhoneCharge VARCHAR(20),
	Notes VARCHAR(MAX)
	CONSTRAINT PK_OccupancyId PRIMARY KEY (Id),
	CONSTRAINT FK_AccountNumber FOREIGN KEY (AccountNumber)
		REFERENCES Customers (AccountNumber),
	CONSTRAINT FK_RoomNumber FOREIGN KEY (RoomNumber)
		REFERENCES Rooms (Number)
)

INSERT INTO Occupancies (EmployeeId, DateOccupied, AccountNumber, RoomNumber,
						 RateApplied)
		VALUES  (1, '2023-12-10', 'AG024412', '202', 20.5),
				(2, '2023-12-10', 'FR021148', '101', 30.5),
				(3, '2023-12-10', 'BG002114', '302', 0.05)


16.Create SoftUni Database

CREATE TABLE Towns(
	Id INT IDENTITY,
	[Name] VARCHAR(100) NOT NULL,
	CONSTRAINT PK_TownId PRIMARY KEY (Id)
)

CREATE TABLE Addresses(
	Id INT IDENTITY,
	[Text] VARCHAR(200) NOT NULL,
	TownId INT NOT NULL,
	CONSTRAINT PK_AddressId PRIMARY KEY (Id),
	CONSTRAINT FK_TownId FOREIGN KEY (TownId) REFERENCES Towns(Id)
)

CREATE TABLE Departments(
	Id INT IDENTITY,
	[Name] VARCHAR(200) NOT NULL,
	CONSTRAINT PK_DepartmentId PRIMARY KEY (Id)
)

CREATE TABLE Employees(
	Id INT IDENTITY,
	FirstName VARCHAR(50) NOT NULL,
	MiddleName VARCHAR(50),
	LastName VARCHAR(50) NOT NULL,
	JobTitle VARCHAR(50)NOT NULL,
	DepartmentId INT NOT NULL,
	HireDate DATETIME,
	Salary DECIMAL(7,2) NOT NULL,
	AddressId INT NOT NULL
	CONSTRAINT PK_EmployeeId PRIMARY KEY (Id),
	CONSTRAINT FK_DepartmentId FOREIGN KEY (DepartmentId) 
		REFERENCES Departments(Id),
	CONSTRAINT FK_AddressId FOREIGN KEY (AddressId)
		REFERENCES Addresses(Id)
)

18.Basic Insert


INSERT INTO Towns([Name])
  VALUES ('Sofia'),
		 ('Plovdiv'),
		 ('Varna'),
		 ('Burgas')

INSERT INTO Departments([Name])
	VALUES ('Engineering'),
		   ('Sales'),
		   ('Marketing'),
		   ('Software Development'),
		   ('Quality Assurance')

INSERT INTO Employees(FirstName, MiddleName, LastName,
			JobTitle, HireDate, DepartmentId, Salary)
		VALUES ('Ivan', 'Ivanov', 'Ivanov', '.NET Developer', '2022-10-03', 3, 3500),
			   ('Petar', 'Petrov', 'Petrov', 'Senior Engineer', '2020-12-01', 1, 4000),
			   ('Maria', 'Petrova ', 'Ivanova', 'Intern', '2024-01-02', 4, 525.25),
			   ('Georgi', 'Terziev', 'Ivanov', 'CEO', '2013-01-01', 2, 3000),
			   ('Peter', 'Pan', 'Pan', 'Intern', '2024-02-01', 3, 599.88)


19. Basic Select All Fields

SELECT * FROM Towns

SELECT * FROM Departments

SELECT * FROM Employees

20. Basic Select All Fields and Order Them

SELECT * FROM Towns 
	ORDER BY [Name]

SELECT * FROM Departments
	ORDER BY [Name]

SELECT * FROM Employees
	ORDER BY Salary DESC

21. Basic Select Some Fields

SELECT [Name] FROM Towns 
	ORDER BY [Name]

SELECT [Name] FROM Departments
	ORDER BY [Name]

SELECT FirstName, LastName, JobTitle, Salary FROM Employees
	ORDER BY Salary DESC



22. Increase Employees Salary

UPDATE Employees
SET Salary = Salary * 1.10

SELECT Salary FROM Employees


23. Decrease Tax Rate

UPDATE Payments
SET TaxRate = TaxRate * 0.97

SELECT TaxRate FROM Payments

24. Delete All Records

TRUNCATE TABLE Occupancies